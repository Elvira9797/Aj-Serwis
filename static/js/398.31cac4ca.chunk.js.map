{"version":3,"file":"static/js/398.31cac4ca.chunk.js","mappings":"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","sources":["components/AnimateOnView/AnimateOnView.tsx","components/Button/Button-styled.ts","components/Button/Button.tsx","components/SectionContainer/SectionContainer.styled.ts","components/SectionContainer/SectionContainer.tsx","components/SectionTitle/SectionTitle.styled.tsx","components/SectionTitle/SectionTitle.tsx","components/VacanciesList/VacancuItem/VacancyItem.styled.ts","components/VacanciesList/VacancuItem/VacancyItem.tsx","components/VacanciesList/VacancyList.styled.ts","components/VacanciesList/VacanciesList.tsx","pages/Vacancies.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { motion } from 'framer-motion';\n\nconst titleAnimation = {\n  hidden: {\n    y: 20,\n    opacity: 0,\n  },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: 0.15,\n      ease: 'easeOut',\n      duration: 0.7,\n    },\n  },\n};\ninterface IAnimateOnView {\n  children: ReactNode;\n}\n\nconst AnimateOnView: FC<IAnimateOnView> = ({ children }) => {\n  return (\n    <motion.div\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ amount: 0.3, once: true }}\n      variants={titleAnimation}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default AnimateOnView;\n","import styled from '@emotion/styled';\nimport { Theme, css } from '@emotion/react';\n\ninterface StyledButton {\n  variant: 'hero' | 'form' | 'card';\n  lightTheme?: boolean;\n}\n\nexport const StyledBtn = styled.button<StyledButton>(\n  ({ theme, variant, lightTheme }) => css`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: inherit;\n    color: ${theme.colors.secondaryColor};\n    cursor: pointer;\n    border: none;\n    font-size: 0.8rem;\n    background-color: transparent;\n    font-weight: ${theme.typography.fontWeight.regular};\n    transition: ${theme.transition.basic};\n    transition-delay: 75ms;\n    text-transform: uppercase;\n    color: ${lightTheme\n      ? theme.colors.primaryColor\n      : theme.colors.secondaryColor};\n\n    ${getVariantStyles(variant, theme, lightTheme)}\n  `\n);\n\nconst getVariantStyles = (\n  variant: StyledButton['variant'],\n  theme: Theme,\n  lightTheme: StyledButton['lightTheme']\n) => {\n  switch (variant) {\n    case 'hero':\n      return css`\n        padding: 0.4rem 1rem;\n        text-transform: none;\n        font-size: 1rem;\n        &:before {\n          content: '';\n          background-color: ${theme.colors.accentColor};\n          position: absolute;\n          top: 50%;\n          left: 0;\n          transform: translateY(-50%);\n          border-radius: 50px;\n          display: block;\n          width: 45px;\n          height: 45px;\n          transition: ${theme.transition.basic};\n          /* transition-delay: 75ms; */\n        }\n\n        span {\n          position: relative;\n          color: inherit;\n          transition: ${theme.transition.basic};\n          transition-delay: 75ms;\n          font-weight: ${theme.typography.fontWeight.semiBold};\n        }\n\n        &:hover:before {\n          width: 100%;\n        }\n\n        @media (max-width: 768px) {\n          &:before {\n            display: none;\n          }\n          padding: 0.8rem 2rem;\n          background-color: ${theme.colors.accentColor};\n          border-radius: 0.5rem;\n          &:hover {\n            padding-left: 2rem;\n            span {\n              color: ${theme.colors.secondaryColor};\n            }\n          }\n        }\n      `;\n    case 'form':\n      return css`\n        background-color: ${theme.colors.accentColor};\n        padding: 0.6rem 4rem;\n        border-radius: 0.5rem;\n        font-weight: 700;\n\n        &:hover:enabled {\n          background-color: ${lightTheme\n            ? theme.colors.primaryColor\n            : theme.colors.secondaryColor};\n          color: ${lightTheme\n            ? theme.colors.secondaryColor\n            : theme.colors.primaryColor};\n          /* transform: scale(1.02); */\n        }\n        &:active:enabled {\n          transition: none;\n          transform: scale(1.02);\n        }\n        &:disabled {\n          background-color: ${theme.colors.accentColor};\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n      `;\n    case 'card':\n      return css`\n        width: 100%;\n        background-color: ${theme.colors.primaryColor};\n        border-color: ${theme.colors.primaryColor};\n        border-radius: 4;\n        padding: 0.6rem 4rem;\n        &:hover {\n          color: ${theme.colors.accentColor};\n          font-weight: ${theme.typography.fontWeight.regular};\n        }\n      `;\n  }\n};\n","import { CSSProperties, FC, ReactNode } from 'react';\nimport { StyledBtn } from './Button-styled';\n\ninterface ButtonProps {\n  children: ReactNode;\n  variant: 'hero' | 'form' | 'card';\n  type?: 'button' | 'submit' | 'reset';\n  onClick?: () => void;\n  style?: CSSProperties;\n  lightTheme?: boolean;\n  disabled?: boolean;\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  variant,\n  type = 'button',\n  onClick,\n  style,\n  lightTheme,\n  disabled,\n}) => {\n  return (\n    <>\n      <StyledBtn\n        style={style}\n        lightTheme={lightTheme}\n        type={type}\n        variant={variant}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        <span>{children}</span>\n      </StyledBtn>\n    </>\n  );\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  height: 100%;\n  max-width: 1232px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n`;\n","import React, { CSSProperties, ReactNode } from 'react'; // Import ReactNode type\nimport { Container } from './SectionContainer.styled';\n\ninterface SectionContainerProps {\n  children: ReactNode;\n  style?: CSSProperties;\n}\n\nconst SectionContainer: React.FC<SectionContainerProps> = ({\n  children,\n  style,\n}) => {\n  return <Container style={style}>{children}</Container>;\n};\n\nexport default SectionContainer;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  font-size: 26px;\n  margin-bottom: 30px;\n  &::after {\n    content: '';\n    width: 240px;\n    height: 2px;\n    background-color: #ffffff;\n    display: block;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    background-color: #c3a069;\n  }\n  @media (max-width: 1160px) {\n    align-items: flex-start !important;\n  }\n  @media (min-width: 1236px) {\n    font-size: 32px;\n    align-items: flex-start;\n    &::after {\n      width: 300px;\n    }\n  }\n`;\n","import AnimateOnView from '../AnimateOnView/AnimateOnView';\nimport { Title } from './SectionTitle.styled';\n\ninterface SectionTitleProps {\n  children: string;\n  style?: {};\n}\n\nconst SectionTitle: React.FC<SectionTitleProps> = ({ children, style }) => {\n  return (\n    <AnimateOnView>\n      <Title style={style}>{children}</Title>\n    </AnimateOnView>\n  );\n};\n\nexport default SectionTitle;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { theme } from '../../../common/theme';\n\nexport const StyledVacancyLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const StyledVacancyItem = styled.li`\n  transition: ${theme.transition.basic};\n  border-radius: 4px;\n  background: ${theme.colors.secondaryColor};\n  overflow: hidden;\n\n  &:hover img {\n    transform: scale(1.03);\n    transition: all 500ms, filter 500ms ease-in-out;\n    filter: brightness(100%);\n  }\n`;\n\nexport const StyledVacancyItemImg = styled.img`\n  filter: brightness(80%);\n\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    cursor: pointer;\n    transition: all 500ms ease-in-out;\n    filter: grayscale(100%);\n  }\n`;\nexport const StyledImgGradient = styled.div`\n  background: linear-gradient(\n    0deg,\n    rgba(0, 0, 0, 0.7) 15%,\n    rgba(252, 176, 69, 0) 50%\n  );\n  position: absolute;\n  top: 0;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  padding: 10px 16px;\n`;\n\nexport const StyledGradientWrap = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const StyledVacancyText = styled.p`\n  display: flex;\n  align-items: center;\n  text-align: start;\n  color: black;\n  gap: 12px;\n  font-size: 14px;\n`;\nexport const StyledVacancyJobTitle = styled.p`\n  text-align: start;\n\n  color: ${theme.colors.secondaryColor};\n  font-size: 20px;\n`;\n\nexport const StyledVacancyTitle = styled.span`\n  text-align: start;\n\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const StyledTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  padding: 16px 8px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ICardFields, IVacancieData } from '../../../common/vacanciesArr';\nimport {\n  StyledGradientWrap,\n  StyledImgGradient,\n  StyledTextContainer,\n  StyledVacancyItem,\n  StyledVacancyItemImg,\n  StyledVacancyLink,\n  StyledVacancyJobTitle,\n  StyledVacancyText,\n  StyledVacancyTitle,\n} from './VacancyItem.styled';\nimport Button from '../../Button/Button';\nimport { FaLocationDot } from 'react-icons/fa6';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { GiCash } from 'react-icons/gi';\nimport AnimateOnView from '../../AnimateOnView/AnimateOnView';\nimport i18n from '../../../i18n';\n\ninterface IVacancyItem {\n  vacancy: IVacancieData;\n  cardFields: ICardFields;\n}\n\nconst VacancyItem: React.FC<IVacancyItem> = ({\n  vacancy: { id, image, job_title, city, position, salary },\n  cardFields,\n}) => {\n  const location = useLocation();\n  const res = i18n.resolvedLanguage;\n\n  return (\n    <StyledVacancyItem>\n      <StyledVacancyLink\n        to={`/vacancies/${id}?lang=${res}`}\n        state={{ from: location }}\n      >\n        <StyledGradientWrap>\n          <StyledVacancyItemImg src={image} alt={job_title} />\n          <StyledImgGradient>\n            <AnimateOnView>\n              <StyledVacancyJobTitle>{job_title}</StyledVacancyJobTitle>\n            </AnimateOnView>\n          </StyledImgGradient>\n        </StyledGradientWrap>\n\n        <StyledTextContainer>\n          <StyledVacancyText>\n            <FaLocationDot size={24} color=\"#c3a069\" />\n            <StyledVacancyTitle>{cardFields.city}:</StyledVacancyTitle> {city}\n          </StyledVacancyText>\n          <StyledVacancyText>\n            <BsFillPersonFill size={24} color=\"#c3a069\" />\n            <StyledVacancyTitle>{cardFields.position}:</StyledVacancyTitle>\n            {position}\n          </StyledVacancyText>\n          <StyledVacancyText>\n            <GiCash size={24} color=\"#c3a069\" />\n            <StyledVacancyTitle>{cardFields.salary}:</StyledVacancyTitle>\n            {salary}\n          </StyledVacancyText>\n        </StyledTextContainer>\n      </StyledVacancyLink>\n\n      <StyledVacancyLink\n        to={`/vacancies/${id}?lang=${res}`}\n        state={{ from: location }}\n      >\n        <Button\n          variant={'card'}\n          type={'button'}\n          onClick={() => {\n            console.log('Navigate Vacancy Details');\n          }}\n        >\n          {cardFields.more_info}\n        </Button>\n      </StyledVacancyLink>\n    </StyledVacancyItem>\n  );\n};\n\nexport default VacancyItem;\n","import styled from '@emotion/styled';\nimport { theme } from '../../common/theme';\n\nexport const StyledVacancyList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledVacanciesSection = styled.section`\n  padding-top: ${theme.section.padding.medium.paddingTop};\n  padding-bottom: ${theme.section.padding.medium.paddingBottom};\n`;\n","import { useLocation } from 'react-router-dom';\nimport GoBackBtn from '../GoBackBtn/GoBackBtn';\nimport SectionContainer from '../SectionContainer/SectionContainer';\nimport VacancyItem from './VacancuItem/VacancyItem';\nimport {\n  StyledVacanciesSection,\n  StyledVacancyList,\n} from './VacancyList.styled';\n\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport { useTranslation } from 'react-i18next';\nimport { ICardFields, IVacancieData } from '../../common/vacanciesArr';\nimport { useRef } from 'react';\n\nfunction VacanciesList() {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const prevPath = useRef(location.state?.from ?? `/`);\n\n  if (location.state) {\n    prevPath.current.search = location.search;\n  }\n\n  const vacaciesShort: IVacancieData[] = t('main.vacancies.job_listing', {\n    returnObjects: true,\n  });\n\n  const cardFields: ICardFields = t('main.vacancies.card_fields', {\n    returnObjects: true,\n  });\n\n  return (\n    <StyledVacanciesSection style={{ paddingTop: '110px' }}>\n      <SectionContainer>\n        <SectionTitle style={{ marginBottom: '10px' }}>\n          {t('vacancies.title')}\n        </SectionTitle>\n        <GoBackBtn prevPath={prevPath.current} style={{ marginBottom: '2rem' }}>\n          {t('vacancies.back')}\n        </GoBackBtn>\n        <StyledVacancyList>\n          {vacaciesShort.length > 0 &&\n            vacaciesShort.map(vacancy => (\n              <VacancyItem\n                key={vacancy.id}\n                vacancy={vacancy}\n                cardFields={cardFields}\n              />\n            ))}\n        </StyledVacancyList>\n      </SectionContainer>\n    </StyledVacanciesSection>\n  );\n}\n\nexport default VacanciesList;\n","import VacanciesList from '../components/VacanciesList/VacanciesList';\n\nconst Vacancies = () => {\n  return <VacanciesList />;\n};\n\nexport default Vacancies;\n"],"names":["titleAnimation","hidden","y","opacity","visible","transition","delay","ease","duration","_ref","children","_jsx","motion","div","initial","whileInView","viewport","amount","once","variants","StyledBtn","styled","button","theme","variant","lightTheme","css","_templateObject","_taggedTemplateLiteral","colors","secondaryColor","typography","fontWeight","regular","basic","primaryColor","getVariantStyles","_templateObject2","accentColor","semiBold","_templateObject3","_templateObject4","_ref$type","type","onClick","style","disabled","_Fragment","Container","Title","h2","AnimateOnView","StyledVacancyLink","Link","StyledVacancyItem","li","StyledVacancyItemImg","img","StyledImgGradient","StyledGradientWrap","_templateObject5","StyledVacancyText","p","_templateObject6","StyledVacancyJobTitle","_templateObject7","StyledVacancyTitle","span","_templateObject8","StyledTextContainer","_templateObject9","_ref$vacancy","vacancy","id","image","job_title","city","position","salary","cardFields","location","useLocation","res","i18n","resolvedLanguage","_jsxs","to","concat","state","from","src","alt","FaLocationDot","size","color","BsFillPersonFill","GiCash","Button","console","log","more_info","StyledVacancyList","ul","StyledVacanciesSection","section","padding","medium","paddingTop","paddingBottom","_location$state$from","_location$state","t","useTranslation","prevPath","useRef","current","search","vacaciesShort","returnObjects","SectionContainer","SectionTitle","marginBottom","GoBackBtn","length","map","VacancyItem","VacanciesList"],"sourceRoot":""}